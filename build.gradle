buildscript {
    ext { // 전역변수 설정임
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter() // mavenCentral에 업로드하는게 번거로워 여기 레포지토리도 많이 쓰이고 있다
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링부트 의존성을 관리해주는 플러그인임 꼭필요함


group 'com.kkwonsy.sample.web'
version '1.0.2-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // web
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // jpa
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('org.mariadb.jdbc:mariadb-java-client')

    // lombok
    compile('org.projectlombok:lombok')
    // Add when @RequiredArgsConstructor & error: variable name not initialized in the default constructor
    testCompile('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    // mustache (view template engine)
    compile('org.springframework.boot:spring-boot-starter-mustache')

    // security
    compile('org.springframework.boot:spring-boot-starter-oauth2-client') // 소셜 로그인 등 클라이언트 입장에서 필요한 의존성

    // session
    compile('org.springframework.session:spring-session-jdbc')

    // security for test
    testCompile('org.springframework.security:spring-security-test')

}
